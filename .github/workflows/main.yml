name: Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action (apply or destroy)'
        required: true
        default: 'apply'

jobs:
  terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.LEO_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.LEO_SECRET_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Validate Terraform
        run: terraform validate
        working-directory: terraform

   
      

      # Plan Terraform using the dynamically injected api_url
      - name: Plan Terraform
        run: terraform plan -out=tfplan 
        working-directory: terraform
        env:
          TF_VAR_github_token: ${{ secrets.TOKEN_GIT }}

      # Apply Terraform using the same tfplan and injected api_url
      - name: Apply Terraform (with API URL)
        if: github.event.inputs.action == 'apply' || github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: terraform
        env:
          TF_VAR_github_token: ${{ secrets.TOKEN_GIT }}
      
        
      
      - name: Get and Write Clean API URL
        id: get_api_url2
        working-directory: terraform
        shell: bash
        run: |
            echo "Fetching clean API URL from Terraform output..."
        
            raw_output=$(terraform output -raw api_gateway_url 2>/dev/null)
        
            # Strip any extra lines or garbage (for safety)
            api_url=$(echo "$raw_output" | sed 's/::.*//' | grep -oE '^https://[^[:space:]]+')
        
            echo "Cleaned API URL: $api_url"
        
            # For GitHub ENV
            safe_url="${api_url//'%'/'%25'}"
            safe_url="${safe_url//$'\n'/'%0A'}"
            safe_url="${safe_url//$'\r'/'%0D'}"
            echo "VITE_API_BASE_URL=$safe_url" >> $GITHUB_ENV
        
            # For React frontend .env.production
            echo "VITE_API_BASE_URL=$api_url" > ../fisc-ai/frontend/.env
            
      - name: Debug .env
        working-directory: fisc-ai/frontend
        run: cat .env
  

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve 
        working-directory: terraform
        env:
          TF_VAR_github_token: ${{ secrets.TOKEN_GIT }}
